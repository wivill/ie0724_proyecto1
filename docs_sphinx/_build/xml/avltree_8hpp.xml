<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="avltree_8hpp" kind="file" language="C++">
    <compoundname>avltree.hpp</compoundname>
    <includes local="no">list</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="2">
        <label>list</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/wivill/git/ie0724_proyecto1/include/avltree.hpp</label>
        <link refid="avltree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structavl__node" prot="public">avl_node</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="avltree_8hpp_1a898a4b89a54ded73b21e9da1fe3f66e9" prot="public" static="no" strong="no">
        <type></type>
        <name>avl_error_codes</name>
        <enumvalue id="avltree_8hpp_1a898a4b89a54ded73b21e9da1fe3f66e9a8dc223625d8ab40cb3a7efa6ca16fc24" prot="public">
          <name>AVL_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="avltree_8hpp_1a898a4b89a54ded73b21e9da1fe3f66e9ac0eb01b497b1af6814d14708037669d7" prot="public">
          <name>AVL_INVALID_PARAM</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="avltree_8hpp_1a898a4b89a54ded73b21e9da1fe3f66e9ab14f54f159d09dc579ea6bbaf873b39d" prot="public">
          <name>AVL_OUT_OF_RANGE</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="avltree_8hpp_1a898a4b89a54ded73b21e9da1fe3f66e9ad386bdc73f4b9844a7de88e78bacf7e7" prot="public">
          <name>AVL_TIMEOUT</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="avltree_8hpp_1a898a4b89a54ded73b21e9da1fe3f66e9ad6b11d762df24cd8391320d776a5006e" prot="public">
          <name>AVL_NOT_FOUND</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Códigos de error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="24" column="21" bodyfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" bodystart="24" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="avltree_8hpp_1af082905f7eac6d03e92015146bbc1925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int max</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>max</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max Retorna el valor mayor de entre los argumentos recibidos.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>primer argumento a comparar </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>segundo argumnento a comparar</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a un entero mayor que b </para>
</simplesect>
<simplesect kind="return"><para>b un entero mayor que a </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="65" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="65" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1ae68286762e7358308b5f665e6f602f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_create</definition>
        <argsstring>(list&lt; float &gt; *in_number_list, struct avl_node *new_root_node)</argsstring>
        <name>avl_create</name>
        <param>
          <type>list&lt; float &gt; *</type>
          <declname>in_number_list</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>new_root_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_create Toma una lista de números flotantes, y crea la estructura de datos deseada. Retorna el nodo raíz del árbol.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_number_list</parametername>
</parameternamelist>
<parameterdescription>
<para>es la lista de números flotantes de entrada </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">new_root_node</parametername>
</parameternamelist>
<parameterdescription>
<para>es el puntero al nodo raíz del árbol creado</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="80" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="80" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1a517a5bab55fb8de02e72874e758fe76e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int free_avl_tree</definition>
        <argsstring>(struct avl_node *&amp;in_root)</argsstring>
        <name>free_avl_tree</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>in_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>free_avl_tree Tome un árbol y limpia la memoria asignada de forma recursiva.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el puntero a la raíz del árbol.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="94" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="94" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1ac8f16e753057e1255dbb492b1c4ed486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_get_height</definition>
        <argsstring>(struct avl_node *&amp;in_root)</argsstring>
        <name>avl_get_height</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>in_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_get_height Tome un nodo y retorna la altura. Si es NULL retorna 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el puntero a la raíz del árbol.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
<simplesect kind="return"><para>in_root-&gt;height altura del nodo. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="108" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="108" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1a4909193705f49426f3203b4e8280ac33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_get_balance</definition>
        <argsstring>(struct avl_node *&amp;in_root)</argsstring>
        <name>avl_get_balance</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>in_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_get_balance Retorna la altura del nodo actual respecto a la altura de sus hijos.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el puntero a la raíz del árbol.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
<simplesect kind="return"><para>height Resta de las alturas de los nodos hijo derecho e izquierdo. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="122" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="122" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1ab6612372623b2fbe62691a20ff8ebb56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_node_add</definition>
        <argsstring>(struct avl_node *in_root, struct avl_node *new_node, struct avl_node *new_root)</argsstring>
        <name>avl_node_add</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>new_node</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>new_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_node_add Toma un nodo y lo inserta en la estructura de datos. Una nueva raíz puede ser obtenida.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo raíz original del árbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_node</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo con el número flotante por insertar </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">new_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el puntero al nuevo nodo raíz del árbol</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="138" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="138" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1af408c38a50504c8c6fbd78858af0a7d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_rotate_left</definition>
        <argsstring>(struct avl_node *&amp;in_root, struct avl_node *&amp;new_root)</argsstring>
        <name>avl_rotate_left</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>new_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="143" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="143" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1acde7916600255da901c6a1fb0cccfb83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_rotate_right</definition>
        <argsstring>(struct avl_node *&amp;in_root, struct avl_node *&amp;new_root)</argsstring>
        <name>avl_rotate_right</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>new_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="148" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="148" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1ac51fdde1ae08ac4faad4fce2abfcaa92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_node_remove</definition>
        <argsstring>(struct avl_node *&amp;in_root, struct avl_node *&amp;node_to_remove, struct avl_node *&amp;new_root)</argsstring>
        <name>avl_node_remove</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>node_to_remove</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *&amp;</type>
          <declname>new_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_node_remove Toma un nodo arbitrario, lo busca y lo elimina de la estructura de datos. Da error si el nodo no pertenece al árbol.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo raíz original del árbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">node_to_remove</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo por eliminar </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">new_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el puntero al nuevo nodo raíz del árbol</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="165" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="165" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1a565343b56a5fafc203e2d005f396c2c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_search</definition>
        <argsstring>(struct avl_node *in_root, float num, struct avl_node **found_node)</argsstring>
        <name>avl_search</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>float</type>
          <declname>num</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> **</type>
          <declname>found_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_search Toma un número flotante, lo busca y se devuelve el nodo al que pertenece. Si existieran varios nodos con el mismo valor, se devuelve cualquiera. Da error si el valor no existe en ningún nodo.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo raíz original del árbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num</parametername>
</parameternamelist>
<parameterdescription>
<para>es el número flotante por buscar </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">found_node</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo encontrado que contiene el valor</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="184" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="184" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1a288d4139df500bce5b1b385ea8d55170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_max_get</definition>
        <argsstring>(struct avl_node *in_root, struct avl_node **max_node)</argsstring>
        <name>avl_max_get</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> **</type>
          <declname>max_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_max_get Se obtiene el nodo que contenga el valor máximo en todo el árbol.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo raíz original del árbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">max_node</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo encontrado que contiene el valor máximo</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="200" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="200" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1a5f94511973b449a1b48479f5d75d7e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_min_get</definition>
        <argsstring>(struct avl_node *in_root, struct avl_node **min_node)</argsstring>
        <name>avl_min_get</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> **</type>
          <declname>min_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_min_get Se obtiene el nodo que contenga el valor mínimo en todo el árbol.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo raíz original del árbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">min_node</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo encontrado que contiene el valor mínimo</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="215" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="215" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1a03ff6547cacc0ba954e7b2d19ba6fd15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_print_node</definition>
        <argsstring>(const string &amp;prefix, struct avl_node *in_root, bool isLeft)</argsstring>
        <name>avl_print_node</name>
        <param>
          <type>const string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>in_root</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isLeft</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="220" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="220" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="avltree_8hpp_1a48be1d20817eba38f7c9c1a6259affba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avl_print</definition>
        <argsstring>(struct avl_node *in_root)</argsstring>
        <name>avl_print</name>
        <param>
          <type>struct <ref refid="structavl__node" kindref="compound">avl_node</ref> *</type>
          <declname>in_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avl_print Se imprime el árbol en terminal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_root</parametername>
</parameternamelist>
<parameterdescription>
<para>es el nodo raíz original del árbol</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error_code un código de error indicando el éxito o error de la función </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" line="234" column="5" declfile="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp" declline="234" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><linebreak/>
 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mariela Hernández (<ulink url="mailto:mariela.hernandezchacon@ucr.ac.cr">mariela.hernandezchacon@ucr.ac.cr</ulink>) José López (<ulink url="mailto:jose.lopezpicado@ucr.ac.cr">jose.lopezpicado@ucr.ac.cr</ulink>) Willy Villalobos (<ulink url="mailto:willy.villalobos@ucr.ac.cr">willy.villalobos@ucr.ac.cr</ulink>) Bernardo Zúñiga (<ulink url="mailto:bernardo.zuniga@ucr.ac.cr">bernardo.zuniga@ucr.ac.cr</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2020-10-12</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2020 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1a898a4b89a54ded73b21e9da1fe3f66e9" kindref="member">avl_error_codes</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>AVL_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>AVL_INVALID_PARAM<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>AVL_OUT_OF_RANGE<sp/><sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>AVL_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-3,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>AVL_NOT_FOUND<sp/><sp/><sp/><sp/><sp/>=<sp/>-4,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pueden<sp/>añadir<sp/>más</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structavl__node" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*<ref refid="structavl__node_1ae67a913c4f6220984eafc7b5a4984856" kindref="member">pc_node</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*<ref refid="structavl__node_1a191d49c9d8926cc0a0566e002a11e2ac" kindref="member">lc_node</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*<ref refid="structavl__node_1acf3957172227b132cd8a8b269d1291b6" kindref="member">rc_node</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structavl__node_1a44c0392ed187c32624bc8d3377ec9235" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structavl__node_1a5a0d6df234fb8763dd11ad313b0bfd46" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1ae68286762e7358308b5f665e6f602f05" kindref="member">avl_create</ref>(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>list&lt;float&gt;<sp/><sp/><sp/><sp/><sp/>*in_number_list,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*new_root_node);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1a517a5bab55fb8de02e72874e758fe76e" kindref="member">free_avl_tree</ref>(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*&amp;in_root</highlight></codeline>
<codeline lineno="96"><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1ac8f16e753057e1255dbb492b1c4ed486" kindref="member">avl_get_height</ref>(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*&amp;in_root</highlight></codeline>
<codeline lineno="110"><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1a4909193705f49426f3203b4e8280ac33" kindref="member">avl_get_balance</ref>(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*&amp;in_root</highlight></codeline>
<codeline lineno="124"><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1ab6612372623b2fbe62691a20ff8ebb56" kindref="member">avl_node_add</ref>(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*in_root,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*new_node,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*new_root);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avl_rotate_left(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*&amp;in_root,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*&amp;new_root</highlight></codeline>
<codeline lineno="146"><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avl_rotate_right(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*&amp;in_root,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*&amp;new_root</highlight></codeline>
<codeline lineno="151"><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1ac51fdde1ae08ac4faad4fce2abfcaa92" kindref="member">avl_node_remove</ref>(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*&amp;in_root,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*&amp;node_to_remove,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*&amp;new_root);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1a565343b56a5fafc203e2d005f396c2c1" kindref="member">avl_search</ref>(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*in_root,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>**found_node);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1a288d4139df500bce5b1b385ea8d55170" kindref="member">avl_max_get</ref>(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*in_root,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>**max_node);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1a5f94511973b449a1b48479f5d75d7e28" kindref="member">avl_min_get</ref>(</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>*in_root,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/>**min_node);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avl_print_node(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*in_root,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isLeft);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avltree_8hpp_1a48be1d20817eba38f7c9c1a6259affba" kindref="member">avl_print</ref>(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structavl__node" kindref="compound">avl_node</ref><sp/><sp/>*in_root);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wivill/git/ie0724_proyecto1/include/avltree.hpp"/>
  </compounddef>
</doxygen>
